#!/usr/bin/env python3

import click
import json
import os
from rich.console import Console

from daqconf.core.conf_utils import make_app_command_data
from daqconf.core.config_file import generate_cli_from_schema
from daqconf.core.metadata import write_metadata_file
from daqconf.core.system import System

console = Console()

# Set moo schema search path
from dunedaq.env import get_moo_model_path
import moo.io
moo.io.default_load_path = get_moo_model_path()

CONTEXT_SETTINGS = dict(help_option_names=["-h", "--help"])
@click.command(context_settings=CONTEXT_SETTINGS)
@generate_cli_from_schema('snbmodules/confgen.jsonnet', 'snbmodules_gen')
@click.argument('json_dir', type=click.Path())
def cli(config, json_dir):

    if os.path.exists(json_dir):
        raise RuntimeError(f"Directory {json_dir} already exists")

    config_data = config[0]
    config_file = config[1]

    #console.log(f"\nTotal configuration for this app before any overrides: {config_data.pod()}")

    # Get our config objects
    # Loading this one another time... (first time in config_file.generate_cli_from_schema)    

    moo.otypes.load_types('snbmodules/confgen.jsonnet')
    import dunedaq.snbmodules.confgen as confgen
    moo.otypes.load_types('daqconf/confgen.jsonnet')
    import dunedaq.daqconf.confgen as daqconfgen

    console.log(f"\nIndividual configuration records before any command line overrides: ")    

    # Copy-of-a-hack, see daqconf's daqconf_multiru_gen file (commit e26a21d54fc5)
    boot = daqconfgen.boot(**config_data.boot)
    console.log(f"boot configuration object: {boot.pod()}")

    snbmodules = confgen.snbmodules(**config_data.snbmodules)
    console.log(f"snbmodules configuration object: {snbmodules.pod()}")

    console.log(f"\nIndividual configuration records after any command line overrides: ")
    console.log(f"boot configuration object: {boot.pod()}")
    console.log(f"snbmodules configuration object: {snbmodules.pod()}")	

    console.log("Loading snbmodulesapp config generator")
    from snbmodules import snbmodulesapp_gen

    the_system = System()
    
    the_system.apps["snbmodulesapp"] = snbmodulesapp_gen.get_snbmodules_app(
        nickname = "snbFileTransfer",
        port = snbmodules.port,
    )

    ####################################################################                                  
    # Application command data generation                                                                 
    ####################################################################                                  

    # Arrange per-app command data into the format used by util.write_json_files()    

    app_command_datas = {
        name : make_app_command_data(the_system, app, name)
        for name, app in the_system.apps.items()
    }

    # Make boot.json config                                                                               
    from daqconf.core.conf_utils import make_system_command_datas, write_json_files
    system_command_datas = make_system_command_datas(boot, the_system, verbose = False)

    write_json_files(app_command_datas, system_command_datas, json_dir, verbose=True)

    console.log(f"snbmodules app config generated in {json_dir}")

    write_metadata_file(json_dir, "snbmodules_gen", config_file)

if __name__ == "__main__":
    try:
        cli(show_default=True, standalone_mode=True)
    except Exception:
        console.print_exception()
